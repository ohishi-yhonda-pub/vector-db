{"c:/Users/mtama/node/vector-db/src/schemas/vector.schema.ts":{"path":"c:/Users/mtama/node/vector-db/src/schemas/vector.schema.ts","statementMap":{"0":{"start":{"line":2,"column":36},"end":{"line":7,"column":16}},"1":{"start":{"line":8,"column":28},"end":{"line":28,"column":2}},"2":{"start":{"line":29,"column":34},"end":{"line":45,"column":2}},"3":{"start":{"line":46,"column":36},"end":{"line":50,"column":2}},"4":{"start":{"line":51,"column":40},"end":{"line":56,"column":2}},"5":{"start":{"line":57,"column":42},"end":{"line":61,"column":2}},"6":{"start":{"line":62,"column":50},"end":{"line":70,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["C:/Users/mtama/node/vector-db/src/schemas/vector.schema.ts"],"sourcesContent":["import { z } from '@hono/zod-openapi'\n\nexport const VectorMetadataSchema = z.object({\n  title: z.string().optional(),\n  content: z.string().optional(),\n  url: z.string().url().optional(),\n  timestamp: z.string().datetime().optional(),\n}).passthrough()\n\nexport const VectorSchema = z.object({\n  id: z.string().min(1).openapi({\n    example: 'vec_123456',\n    description: 'ベクトルの一意識別子'\n  }),\n  values: z.union([\n    z.array(z.number()),\n    z.any() // VectorFloatArray (Float32Array)\n  ]).openapi({\n    example: [0.1, 0.2, 0.3],\n    description: 'ベクトルの数値配列またはFloat32Array'\n  }),\n  namespace: z.string().optional().openapi({\n    example: 'default',\n    description: 'ベクトルの名前空間'\n  }),\n  metadata: VectorMetadataSchema.optional().openapi({\n    description: 'ベクトルに関連付けられたメタデータ'\n  })\n})\n\nexport const CreateVectorSchema = z.object({\n  text: z.string().min(1).openapi({\n    example: 'これはサンプルテキストです',\n    description: 'ベクトル化するテキスト'\n  }),\n  model: z.string().optional().openapi({\n    example: '@cf/baai/bge-base-en-v1.5',\n    description: '使用するモデル名'\n  }),\n  namespace: z.string().optional().openapi({\n    example: 'default',\n    description: 'ベクトルの名前空間'\n  }),\n  metadata: VectorMetadataSchema.optional().openapi({\n    description: 'ベクトルに関連付けるメタデータ'\n  })\n})\n\nexport const VectorResponseSchema = z.object({\n  success: z.boolean(),\n  data: VectorSchema,\n  message: z.string().optional()\n})\n\nexport const VectorListResponseSchema = z.object({\n  success: z.boolean(),\n  data: z.array(VectorSchema),\n  count: z.number(),\n  message: z.string().optional()\n})\n\nexport const DeleteVectorResponseSchema = z.object({\n  success: z.boolean(),\n  deletedCount: z.number(),\n  message: z.string().optional()\n})\n\n// 非同期操作レスポンススキーマ\nexport const AsyncVectorOperationResponseSchema = z.object({\n  success: z.boolean(),\n  data: z.object({\n    jobId: z.string(),\n    workflowId: z.string(),\n    status: z.string(),\n    message: z.string()\n  })\n})\n\nexport type Vector = z.infer<typeof VectorSchema>\nexport type CreateVector = z.infer<typeof CreateVectorSchema>\nexport type VectorResponse = z.infer<typeof VectorResponseSchema>\nexport type VectorListResponse = z.infer<typeof VectorListResponseSchema>\nexport type DeleteVectorResponse = z.infer<typeof DeleteVectorResponseSchema>\nexport type VectorMetadata = z.infer<typeof VectorMetadataSchema>\nexport type AsyncVectorOperationResponse = z.infer<typeof AsyncVectorOperationResponseSchema>"],"mappings":"AAAA,SAAS,SAAS;AAEX,aAAM,uBAAuB,EAAE,OAAO;AAAA,EAC3C,OAAO,EAAE,OAAO,EAAE,SAAS;AAAA,EAC3B,SAAS,EAAE,OAAO,EAAE,SAAS;AAAA,EAC7B,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC/B,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS;AAC5C,CAAC,EAAE,YAAY;AAER,aAAM,eAAe,EAAE,OAAO;AAAA,EACnC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,QAAQ;AAAA,IAC5B,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,QAAQ,EAAE,MAAM;AAAA,IACd,EAAE,MAAM,EAAE,OAAO,CAAC;AAAA,IAClB,EAAE,IAAI;AAAA;AAAA,EACR,CAAC,EAAE,QAAQ;AAAA,IACT,SAAS,CAAC,KAAK,KAAK,GAAG;AAAA,IACvB,aAAa;AAAA,EACf,CAAC;AAAA,EACD,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ;AAAA,IACvC,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,UAAU,qBAAqB,SAAS,EAAE,QAAQ;AAAA,IAChD,aAAa;AAAA,EACf,CAAC;AACH,CAAC;AAEM,aAAM,qBAAqB,EAAE,OAAO;AAAA,EACzC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,QAAQ;AAAA,IAC9B,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ;AAAA,IACnC,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ;AAAA,IACvC,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,UAAU,qBAAqB,SAAS,EAAE,QAAQ;AAAA,IAChD,aAAa;AAAA,EACf,CAAC;AACH,CAAC;AAEM,aAAM,uBAAuB,EAAE,OAAO;AAAA,EAC3C,SAAS,EAAE,QAAQ;AAAA,EACnB,MAAM;AAAA,EACN,SAAS,EAAE,OAAO,EAAE,SAAS;AAC/B,CAAC;AAEM,aAAM,2BAA2B,EAAE,OAAO;AAAA,EAC/C,SAAS,EAAE,QAAQ;AAAA,EACnB,MAAM,EAAE,MAAM,YAAY;AAAA,EAC1B,OAAO,EAAE,OAAO;AAAA,EAChB,SAAS,EAAE,OAAO,EAAE,SAAS;AAC/B,CAAC;AAEM,aAAM,6BAA6B,EAAE,OAAO;AAAA,EACjD,SAAS,EAAE,QAAQ;AAAA,EACnB,cAAc,EAAE,OAAO;AAAA,EACvB,SAAS,EAAE,OAAO,EAAE,SAAS;AAC/B,CAAC;AAGM,aAAM,qCAAqC,EAAE,OAAO;AAAA,EACzD,SAAS,EAAE,QAAQ;AAAA,EACnB,MAAM,EAAE,OAAO;AAAA,IACb,OAAO,EAAE,OAAO;AAAA,IAChB,YAAY,EAAE,OAAO;AAAA,IACrB,QAAQ,EAAE,OAAO;AAAA,IACjB,SAAS,EAAE,OAAO;AAAA,EACpB,CAAC;AACH,CAAC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2e3dc4b53178f16a9638cf10f62a78c104331f66"},"c:/Users/mtama/node/vector-db/src/schemas/error.schema.ts":{"path":"c:/Users/mtama/node/vector-db/src/schemas/error.schema.ts","statementMap":{"0":{"start":{"line":2,"column":35},"end":{"line":15,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["C:/Users/mtama/node/vector-db/src/schemas/error.schema.ts"],"sourcesContent":["import { z } from '@hono/zod-openapi'\n\nexport const ErrorResponseSchema = z.object({\n  success: z.literal(false),\n  error: z.string().openapi({\n    example: 'Bad Request',\n    description: 'エラーの種類'\n  }),\n  message: z.string().openapi({\n    example: '無効なリクエストパラメータです',\n    description: 'エラーの詳細メッセージ'\n  }),\n  details: z.any().optional().openapi({\n    description: 'エラーの詳細情報'\n  })\n})\n\nexport type ErrorResponse = z.infer<typeof ErrorResponseSchema>"],"mappings":"AAAA,SAAS,SAAS;AAEX,aAAM,sBAAsB,EAAE,OAAO;AAAA,EAC1C,SAAS,EAAE,QAAQ,KAAK;AAAA,EACxB,OAAO,EAAE,OAAO,EAAE,QAAQ;AAAA,IACxB,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,SAAS,EAAE,OAAO,EAAE,QAAQ;AAAA,IAC1B,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ;AAAA,IAClC,aAAa;AAAA,EACf,CAAC;AACH,CAAC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d6a63d60aa5985710aa1a5dd58befc74fd0f881d"},"c:/Users/mtama/node/vector-db/src/routes/api/vectors/list.ts":{"path":"c:/Users/mtama/node/vector-db/src/routes/api/vectors/list.ts","statementMap":{"0":{"start":{"line":7,"column":32},"end":{"line":38,"column":2}},"1":{"start":{"line":39,"column":34},"end":{"line":64,"column":1}},"2":{"start":{"line":40,"column":2},"end":{"line":63,"column":3}},"3":{"start":{"line":41,"column":41},"end":{"line":41,"column":61}},"4":{"start":{"line":42,"column":28},"end":{"line":42,"column":68}},"5":{"start":{"line":43,"column":26},"end":{"line":43,"column":65}},"6":{"start":{"line":44,"column":19},"end":{"line":48,"column":6}},"7":{"start":{"line":49,"column":4},"end":{"line":55,"column":12}},"8":{"start":{"line":57,"column":4},"end":{"line":57,"column":48}},"9":{"start":{"line":58,"column":4},"end":{"line":62,"column":12}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":39,"column":34},"end":{"line":39,"column":35}},"loc":{"start":{"line":39,"column":47},"end":{"line":64,"column":1}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":51,"column":12},"end":{"line":51,"column":32}},"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":26}},{"start":{"line":51,"column":30},"end":{"line":51,"column":32}}],"line":51},"1":{"loc":{"start":{"line":52,"column":13},"end":{"line":52,"column":30}},"type":"binary-expr","locations":[{"start":{"line":52,"column":13},"end":{"line":52,"column":25}},{"start":{"line":52,"column":29},"end":{"line":52,"column":30}}],"line":52},"2":{"loc":{"start":{"line":61,"column":15},"end":{"line":61,"column":79}},"type":"cond-expr","locations":[{"start":{"line":61,"column":40},"end":{"line":61,"column":53}},{"start":{"line":61,"column":56},"end":{"line":61,"column":79}}],"line":61}},"s":{"0":1,"1":1,"2":8,"3":8,"4":8,"5":8,"6":8,"7":6,"8":2,"9":2},"f":{"0":8},"b":{"0":[6,1],"1":[6,5],"2":[1,1]},"inputSourceMap":{"version":3,"sources":["C:/Users/mtama/node/vector-db/src/routes/api/vectors/list.ts"],"sourcesContent":["import { createRoute, RouteHandler } from '@hono/zod-openapi'\nimport { z } from '@hono/zod-openapi'\nimport {\n  VectorListResponseSchema,\n  type VectorListResponse\n} from '../../../schemas/vector.schema'\nimport { ErrorResponseSchema, type ErrorResponse } from '../../../schemas/error.schema'\n\n// 環境の型定義\ntype EnvType = {\n  Bindings: Env\n}\n\n// ベクトル一覧取得ルート定義\nexport const listVectorsRoute = createRoute({\n  method: 'get',\n  path: '/vectors',\n  request: {\n    query: z.object({\n      namespace: z.string().optional(),\n      limit: z.string().transform(Number).pipe(z.number().int().min(1).max(100)).default(10),\n      cursor: z.string().optional()\n    })\n  },\n  responses: {\n    200: {\n      content: {\n        'application/json': {\n          schema: VectorListResponseSchema\n        }\n      },\n      description: 'ベクトル一覧'\n    },\n    500: {\n      content: {\n        'application/json': {\n          schema: ErrorResponseSchema\n        }\n      },\n      description: 'サーバーエラー'\n    }\n  },\n  tags: ['Vectors'],\n  summary: 'ベクトル一覧の取得',\n  description: 'ベクトルの一覧を取得します'\n})\n\n// ベクトル一覧取得ハンドラー\nexport const listVectorsHandler: RouteHandler<typeof listVectorsRoute, EnvType> = async (c) => {\n  try {\n    const { namespace, limit, cursor } = c.req.valid('query')\n    \n    // VectorManager Durable Objectを使用して一覧を取得\n    const vectorManagerId = c.env.VECTOR_CACHE.idFromName('default')\n    const vectorManager = c.env.VECTOR_CACHE.get(vectorManagerId)\n    \n    // ベクトル一覧を取得\n    const result = await vectorManager.listVectors({\n      namespace,\n      limit,\n      cursor\n    })\n    \n    return c.json<VectorListResponse, 200>({\n      success: true,\n      data: result.vectors || [],\n      count: result.count || 0,\n      cursor: result.nextCursor,\n      message: 'ベクトル一覧を取得しました'\n    }, 200)\n  } catch (error) {\n    console.error('List vectors error:', error)\n    return c.json<ErrorResponse, 500>({\n      success: false,\n      error: 'Internal Server Error',\n      message: error instanceof Error ? error.message : 'ベクトル一覧の取得中にエラーが発生しました'\n    }, 500)\n  }\n}"],"mappings":"AAAA,SAAS,mBAAiC;AAC1C,SAAS,SAAS;AAClB;AAAA,EACE;AAAA,OAEK;AACP,SAAS,2BAA+C;AAQjD,aAAM,mBAAmB,YAAY;AAAA,EAC1C,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,SAAS;AAAA,IACP,OAAO,EAAE,OAAO;AAAA,MACd,WAAW,EAAE,OAAO,EAAE,SAAS;AAAA,MAC/B,OAAO,EAAE,OAAO,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,QAAQ,EAAE;AAAA,MACrF,QAAQ,EAAE,OAAO,EAAE,SAAS;AAAA,IAC9B,CAAC;AAAA,EACH;AAAA,EACA,WAAW;AAAA,IACT,KAAK;AAAA,MACH,SAAS;AAAA,QACP,oBAAoB;AAAA,UAClB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,aAAa;AAAA,IACf;AAAA,IACA,KAAK;AAAA,MACH,SAAS;AAAA,QACP,oBAAoB;AAAA,UAClB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,aAAa;AAAA,IACf;AAAA,EACF;AAAA,EACA,MAAM,CAAC,SAAS;AAAA,EAChB,SAAS;AAAA,EACT,aAAa;AACf,CAAC;AAGM,aAAM,qBAAqE,OAAO,MAAM;AAC7F,MAAI;AACF,UAAM,EAAE,WAAW,OAAO,OAAO,IAAI,EAAE,IAAI,MAAM,OAAO;AAGxD,UAAM,kBAAkB,EAAE,IAAI,aAAa,WAAW,SAAS;AAC/D,UAAM,gBAAgB,EAAE,IAAI,aAAa,IAAI,eAAe;AAG5D,UAAM,SAAS,MAAM,cAAc,YAAY;AAAA,MAC7C;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,WAAO,EAAE,KAA8B;AAAA,MACrC,SAAS;AAAA,MACT,MAAM,OAAO,WAAW,CAAC;AAAA,MACzB,OAAO,OAAO,SAAS;AAAA,MACvB,QAAQ,OAAO;AAAA,MACf,SAAS;AAAA,IACX,GAAG,GAAG;AAAA,EACR,SAAS,OAAO;AACd,YAAQ,MAAM,uBAAuB,KAAK;AAC1C,WAAO,EAAE,KAAyB;AAAA,MAChC,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS,iBAAiB,QAAQ,MAAM,UAAU;AAAA,IACpD,GAAG,GAAG;AAAA,EACR;AACF;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"73293fce9413266e4f9543ec1b3b9d6eac5716ea"}}