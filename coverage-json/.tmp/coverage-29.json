{"c:/Users/mtama/node/vector-db/src/schemas/error.schema.ts":{"path":"c:/Users/mtama/node/vector-db/src/schemas/error.schema.ts","statementMap":{"0":{"start":{"line":2,"column":35},"end":{"line":15,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["C:/Users/mtama/node/vector-db/src/schemas/error.schema.ts"],"sourcesContent":["import { z } from '@hono/zod-openapi'\n\nexport const ErrorResponseSchema = z.object({\n  success: z.literal(false),\n  error: z.string().openapi({\n    example: 'Bad Request',\n    description: 'エラーの種類'\n  }),\n  message: z.string().openapi({\n    example: '無効なリクエストパラメータです',\n    description: 'エラーの詳細メッセージ'\n  }),\n  details: z.any().optional().openapi({\n    description: 'エラーの詳細情報'\n  })\n})\n\nexport type ErrorResponse = z.infer<typeof ErrorResponseSchema>"],"mappings":"AAAA,SAAS,SAAS;AAEX,aAAM,sBAAsB,EAAE,OAAO;AAAA,EAC1C,SAAS,EAAE,QAAQ,KAAK;AAAA,EACxB,OAAO,EAAE,OAAO,EAAE,QAAQ;AAAA,IACxB,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,SAAS,EAAE,OAAO,EAAE,QAAQ;AAAA,IAC1B,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ;AAAA,IAClC,aAAa;AAAA,EACf,CAAC;AACH,CAAC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d6a63d60aa5985710aa1a5dd58befc74fd0f881d"},"c:/Users/mtama/node/vector-db/src/schemas/embedding.schema.ts":{"path":"c:/Users/mtama/node/vector-db/src/schemas/embedding.schema.ts","statementMap":{"0":{"start":{"line":2,"column":39},"end":{"line":11,"column":2}},"1":{"start":{"line":12,"column":47},"end":{"line":20,"column":2}},"2":{"start":{"line":21,"column":36},"end":{"line":29,"column":2}},"3":{"start":{"line":30,"column":44},"end":{"line":39,"column":2}},"4":{"start":{"line":40,"column":44},"end":{"line":42,"column":2}},"5":{"start":{"line":43,"column":43},"end":{"line":52,"column":2}},"6":{"start":{"line":53,"column":31},"end":{"line":59,"column":2}},"7":{"start":{"line":60,"column":40},"end":{"line":63,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["C:/Users/mtama/node/vector-db/src/schemas/embedding.schema.ts"],"sourcesContent":["import { z } from '@hono/zod-openapi'\n\n// 埋め込み生成スキーマ\nexport const GenerateEmbeddingSchema = z.object({\n  text: z.string().min(1).openapi({\n    example: 'This is a sample text to generate embeddings',\n    description: '埋め込みを生成するテキスト'\n  }),\n  model: z.string().optional().openapi({\n    example: '@cf/baai/bge-base-en-v1.5',\n    description: '使用するモデル名'\n  })\n})\n\nexport const GenerateEmbeddingResponseSchema = z.object({\n  success: z.boolean(),\n  data: z.object({\n    jobId: z.string(),\n    workflowId: z.string(),\n    status: z.string()\n  }),\n  message: z.string()\n})\n\n// バッチ埋め込み生成スキーマ\nexport const BatchEmbeddingSchema = z.object({\n  texts: z.array(z.string()).min(1).openapi({\n    example: ['Text 1', 'Text 2', 'Text 3'],\n    description: '埋め込みを生成するテキストの配列'\n  }),\n  model: z.string().optional(),\n  batchSize: z.number().int().min(1).max(100).optional(),\n  saveToVectorize: z.boolean().optional()\n})\n\nexport const BatchEmbeddingResponseSchema = z.object({\n  success: z.boolean(),\n  data: z.object({\n    jobId: z.string(),\n    workflowId: z.string(),\n    status: z.string(),\n    textsCount: z.number()\n  }),\n  message: z.string()\n})\n\n// スケジュールバッチ埋め込みスキーマ\nexport const ScheduleBatchEmbeddingSchema = BatchEmbeddingSchema.extend({\n  delayMs: z.number().int().min(0).optional()\n})\n\nexport const ScheduleBatchResponseSchema = z.object({\n  success: z.boolean(),\n  data: z.object({\n    jobId: z.string(),\n    workflowId: z.string().optional(),\n    status: z.string(),\n    textsCount: z.number()\n  }),\n  message: z.string()\n})\n\n// モデル情報スキーマ\nexport const ModelInfoSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  dimensions: z.number(),\n  maxTokens: z.number(),\n  recommended: z.boolean()\n})\n\nexport const ListModelsResponseSchema = z.object({\n  success: z.boolean(),\n  data: z.array(ModelInfoSchema)\n})\n\n// 型定義のエクスポート\nexport type GenerateEmbedding = z.infer<typeof GenerateEmbeddingSchema>\nexport type GenerateEmbeddingResponse = z.infer<typeof GenerateEmbeddingResponseSchema>\nexport type BatchEmbedding = z.infer<typeof BatchEmbeddingSchema>\nexport type BatchEmbeddingResponse = z.infer<typeof BatchEmbeddingResponseSchema>\nexport type ScheduleBatchEmbedding = z.infer<typeof ScheduleBatchEmbeddingSchema>\nexport type ScheduleBatchResponse = z.infer<typeof ScheduleBatchResponseSchema>\nexport type ModelInfo = z.infer<typeof ModelInfoSchema>\nexport type ListModelsResponse = z.infer<typeof ListModelsResponseSchema>"],"mappings":"AAAA,SAAS,SAAS;AAGX,aAAM,0BAA0B,EAAE,OAAO;AAAA,EAC9C,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,QAAQ;AAAA,IAC9B,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAAA,EACD,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ;AAAA,IACnC,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AACH,CAAC;AAEM,aAAM,kCAAkC,EAAE,OAAO;AAAA,EACtD,SAAS,EAAE,QAAQ;AAAA,EACnB,MAAM,EAAE,OAAO;AAAA,IACb,OAAO,EAAE,OAAO;AAAA,IAChB,YAAY,EAAE,OAAO;AAAA,IACrB,QAAQ,EAAE,OAAO;AAAA,EACnB,CAAC;AAAA,EACD,SAAS,EAAE,OAAO;AACpB,CAAC;AAGM,aAAM,uBAAuB,EAAE,OAAO;AAAA,EAC3C,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,QAAQ;AAAA,IACxC,SAAS,CAAC,UAAU,UAAU,QAAQ;AAAA,IACtC,aAAa;AAAA,EACf,CAAC;AAAA,EACD,OAAO,EAAE,OAAO,EAAE,SAAS;AAAA,EAC3B,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,SAAS;AAAA,EACrD,iBAAiB,EAAE,QAAQ,EAAE,SAAS;AACxC,CAAC;AAEM,aAAM,+BAA+B,EAAE,OAAO;AAAA,EACnD,SAAS,EAAE,QAAQ;AAAA,EACnB,MAAM,EAAE,OAAO;AAAA,IACb,OAAO,EAAE,OAAO;AAAA,IAChB,YAAY,EAAE,OAAO;AAAA,IACrB,QAAQ,EAAE,OAAO;AAAA,IACjB,YAAY,EAAE,OAAO;AAAA,EACvB,CAAC;AAAA,EACD,SAAS,EAAE,OAAO;AACpB,CAAC;AAGM,aAAM,+BAA+B,qBAAqB,OAAO;AAAA,EACtE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,SAAS;AAC5C,CAAC;AAEM,aAAM,8BAA8B,EAAE,OAAO;AAAA,EAClD,SAAS,EAAE,QAAQ;AAAA,EACnB,MAAM,EAAE,OAAO;AAAA,IACb,OAAO,EAAE,OAAO;AAAA,IAChB,YAAY,EAAE,OAAO,EAAE,SAAS;AAAA,IAChC,QAAQ,EAAE,OAAO;AAAA,IACjB,YAAY,EAAE,OAAO;AAAA,EACvB,CAAC;AAAA,EACD,SAAS,EAAE,OAAO;AACpB,CAAC;AAGM,aAAM,kBAAkB,EAAE,OAAO;AAAA,EACtC,MAAM,EAAE,OAAO;AAAA,EACf,aAAa,EAAE,OAAO;AAAA,EACtB,YAAY,EAAE,OAAO;AAAA,EACrB,WAAW,EAAE,OAAO;AAAA,EACpB,aAAa,EAAE,QAAQ;AACzB,CAAC;AAEM,aAAM,2BAA2B,EAAE,OAAO;AAAA,EAC/C,SAAS,EAAE,QAAQ;AAAA,EACnB,MAAM,EAAE,MAAM,eAAe;AAC/B,CAAC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"286b2567c213386e5f4a34b368118ca0a79a91a0"},"c:/Users/mtama/node/vector-db/src/routes/api/embeddings/models.ts":{"path":"c:/Users/mtama/node/vector-db/src/routes/api/embeddings/models.ts","statementMap":{"0":{"start":{"line":6,"column":31},"end":{"line":30,"column":2}},"1":{"start":{"line":31,"column":33},"end":{"line":48,"column":1}},"2":{"start":{"line":32,"column":2},"end":{"line":47,"column":3}},"3":{"start":{"line":33,"column":27},"end":{"line":33,"column":68}},"4":{"start":{"line":34,"column":25},"end":{"line":34,"column":64}},"5":{"start":{"line":35,"column":19},"end":{"line":35,"column":58}},"6":{"start":{"line":36,"column":4},"end":{"line":39,"column":12}},"7":{"start":{"line":41,"column":4},"end":{"line":41,"column":47}},"8":{"start":{"line":42,"column":4},"end":{"line":46,"column":12}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":31,"column":33},"end":{"line":31,"column":34}},"loc":{"start":{"line":31,"column":46},"end":{"line":48,"column":1}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":45,"column":15},"end":{"line":45,"column":78}},"type":"cond-expr","locations":[{"start":{"line":45,"column":40},"end":{"line":45,"column":53}},{"start":{"line":45,"column":56},"end":{"line":45,"column":78}}],"line":45}},"s":{"0":1,"1":1,"2":5,"3":5,"4":5,"5":5,"6":2,"7":3,"8":3},"f":{"0":5},"b":{"0":[2,1]},"inputSourceMap":{"version":3,"sources":["C:/Users/mtama/node/vector-db/src/routes/api/embeddings/models.ts"],"sourcesContent":["import { createRoute, RouteHandler } from '@hono/zod-openapi'\nimport { ErrorResponseSchema, type ErrorResponse } from '../../../schemas/error.schema'\nimport {\n  ListModelsResponseSchema,\n  type ListModelsResponse\n} from '../../../schemas/embedding.schema'\n\n// 環境の型定義\ntype EnvType = {\n  Bindings: Env\n}\n\n// 利用可能なモデル一覧ルート\nexport const listModelsRoute = createRoute({\n  method: 'get',\n  path: '/embeddings/models',\n  responses: {\n    200: {\n      content: {\n        'application/json': {\n          schema: ListModelsResponseSchema\n        }\n      },\n      description: '利用可能なモデル一覧'\n    },\n    500: {\n      content: {\n        'application/json': {\n          schema: ErrorResponseSchema\n        }\n      },\n      description: 'サーバーエラー'\n    }\n  },\n  tags: ['Embeddings'],\n  summary: '利用可能なモデル一覧',\n  description: '埋め込み生成に利用可能なモデルの一覧を取得します'\n})\n\n// 利用可能なモデル一覧ハンドラー\nexport const listModelsHandler: RouteHandler<typeof listModelsRoute, EnvType> = async (c) => {\n  try {\n    const aiEmbeddingsId = c.env.AI_EMBEDDINGS.idFromName('default')\n    const aiEmbeddings = c.env.AI_EMBEDDINGS.get(aiEmbeddingsId)\n    \n    const models = await aiEmbeddings.getAvailableModels()\n    \n    return c.json<ListModelsResponse, 200>({\n      success: true,\n      data: models\n    }, 200)\n  } catch (error) {\n    console.error('List models error:', error)\n    return c.json<ErrorResponse, 500>({\n      success: false,\n      error: 'Internal Server Error',\n      message: error instanceof Error ? error.message : 'モデル一覧の取得中にエラーが発生しました'\n    }, 500)\n  }\n}"],"mappings":"AAAA,SAAS,mBAAiC;AAC1C,SAAS,2BAA+C;AACxD;AAAA,EACE;AAAA,OAEK;AAQA,aAAM,kBAAkB,YAAY;AAAA,EACzC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,WAAW;AAAA,IACT,KAAK;AAAA,MACH,SAAS;AAAA,QACP,oBAAoB;AAAA,UAClB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,aAAa;AAAA,IACf;AAAA,IACA,KAAK;AAAA,MACH,SAAS;AAAA,QACP,oBAAoB;AAAA,UAClB,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,aAAa;AAAA,IACf;AAAA,EACF;AAAA,EACA,MAAM,CAAC,YAAY;AAAA,EACnB,SAAS;AAAA,EACT,aAAa;AACf,CAAC;AAGM,aAAM,oBAAmE,OAAO,MAAM;AAC3F,MAAI;AACF,UAAM,iBAAiB,EAAE,IAAI,cAAc,WAAW,SAAS;AAC/D,UAAM,eAAe,EAAE,IAAI,cAAc,IAAI,cAAc;AAE3D,UAAM,SAAS,MAAM,aAAa,mBAAmB;AAErD,WAAO,EAAE,KAA8B;AAAA,MACrC,SAAS;AAAA,MACT,MAAM;AAAA,IACR,GAAG,GAAG;AAAA,EACR,SAAS,OAAO;AACd,YAAQ,MAAM,sBAAsB,KAAK;AACzC,WAAO,EAAE,KAAyB;AAAA,MAChC,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS,iBAAiB,QAAQ,MAAM,UAAU;AAAA,IACpD,GAAG,GAAG;AAAA,EACR;AACF;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c29656ed22158313231357f74db97f7175e74b06"}}