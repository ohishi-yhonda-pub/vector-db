{"c:/Users/mtama/node/vector-db/src/durable-objects/schemas/vector-manager.schema.ts":{"path":"c:/Users/mtama/node/vector-db/src/durable-objects/schemas/vector-manager.schema.ts","statementMap":{"0":{"start":{"line":2,"column":40},"end":{"line":8,"column":2}},"1":{"start":{"line":9,"column":39},"end":{"line":11,"column":2}},"2":{"start":{"line":12,"column":33},"end":{"line":14,"column":16}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["C:/Users/mtama/node/vector-db/src/durable-objects/schemas/vector-manager.schema.ts"],"sourcesContent":["import { z } from 'zod'\n\n// FindSimilarオプションのスキーマ\nexport const findSimilarOptionsSchema = z.object({\n  topK: z.number().int().min(1).max(100).default(10),\n  excludeSelf: z.boolean().default(false),\n  namespace: z.string().optional(),\n  returnMetadata: z.boolean().default(true),\n  filter: z.record(z.any()).optional()\n})\n\n// クリーンアップオプションのスキーマ\nexport const cleanupJobsParamsSchema = z.object({\n  olderThanHours: z.number().positive().default(24)\n})\n\n// メタデータスキーマ\nexport const jobMetadataSchema = z.object({\n  vectorsCreated: z.number().int().min(0).optional()\n}).passthrough()"],"mappings":"AAAA,SAAS,SAAS;AAGX,aAAM,2BAA2B,EAAE,OAAO;AAAA,EAC/C,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,QAAQ,EAAE;AAAA,EACjD,aAAa,EAAE,QAAQ,EAAE,QAAQ,KAAK;AAAA,EACtC,WAAW,EAAE,OAAO,EAAE,SAAS;AAAA,EAC/B,gBAAgB,EAAE,QAAQ,EAAE,QAAQ,IAAI;AAAA,EACxC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,SAAS;AACrC,CAAC;AAGM,aAAM,0BAA0B,EAAE,OAAO;AAAA,EAC9C,gBAAgB,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE;AAClD,CAAC;AAGM,aAAM,oBAAoB,EAAE,OAAO;AAAA,EACxC,gBAAgB,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,SAAS;AACnD,CAAC,EAAE,YAAY;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"be3eab8fcf2c90e8d0dcfd269f6df1ed7ba008ac"},"c:/Users/mtama/node/vector-db/src/durable-objects/vector-manager.ts":{"path":"c:/Users/mtama/node/vector-db/src/durable-objects/vector-manager.ts","statementMap":{"0":{"start":{"line":5,"column":17},"end":{"line":9,"column":3}},"1":{"start":{"line":11,"column":4},"end":{"line":11,"column":20}},"2":{"start":{"line":12,"column":4},"end":{"line":12,"column":46}},"3":{"start":{"line":16,"column":26},"end":{"line":16,"column":55}},"4":{"start":{"line":17,"column":4},"end":{"line":23,"column":7}},"5":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"6":{"start":{"line":25,"column":6},"end":{"line":25,"column":28}},"7":{"start":{"line":27,"column":4},"end":{"line":30,"column":7}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":36}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":46}},"10":{"start":{"line":40,"column":20},"end":{"line":40,"column":68}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":58}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":19}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":51}},"14":{"start":{"line":48,"column":4},"end":{"line":48,"column":54}},"15":{"start":{"line":51,"column":4},"end":{"line":51,"column":46}},"16":{"start":{"line":54,"column":20},"end":{"line":54,"column":66}},"17":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"18":{"start":{"line":56,"column":6},"end":{"line":56,"column":54}},"19":{"start":{"line":58,"column":26},"end":{"line":58,"column":71}},"20":{"start":{"line":59,"column":25},"end":{"line":64,"column":5}},"21":{"start":{"line":65,"column":20},"end":{"line":65,"column":84}},"22":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"23":{"start":{"line":67,"column":6},"end":{"line":67,"column":110}},"24":{"start":{"line":67,"column":58},"end":{"line":67,"column":79}},"25":{"start":{"line":69,"column":4},"end":{"line":69,"column":19}},"26":{"start":{"line":72,"column":4},"end":{"line":76,"column":6}},"27":{"start":{"line":74,"column":19},"end":{"line":74,"column":73}},"28":{"start":{"line":80,"column":18},"end":{"line":80,"column":44}},"29":{"start":{"line":81,"column":21},"end":{"line":90,"column":6}},"30":{"start":{"line":91,"column":16},"end":{"line":100,"column":5}},"31":{"start":{"line":101,"column":4},"end":{"line":107,"column":7}},"32":{"start":{"line":108,"column":4},"end":{"line":108,"column":68}},"33":{"start":{"line":112,"column":18},"end":{"line":112,"column":44}},"34":{"start":{"line":113,"column":21},"end":{"line":119,"column":6}},"35":{"start":{"line":120,"column":16},"end":{"line":126,"column":5}},"36":{"start":{"line":127,"column":4},"end":{"line":133,"column":7}},"37":{"start":{"line":134,"column":4},"end":{"line":134,"column":68}},"38":{"start":{"line":138,"column":21},"end":{"line":138,"column":78}},"39":{"start":{"line":139,"column":19},"end":{"line":139,"column":42}},"40":{"start":{"line":140,"column":4},"end":{"line":140,"column":18}},"41":{"start":{"line":144,"column":16},"end":{"line":144,"column":44}},"42":{"start":{"line":145,"column":4},"end":{"line":145,"column":21}},"43":{"start":{"line":145,"column":14},"end":{"line":145,"column":21}},"44":{"start":{"line":146,"column":4},"end":{"line":156,"column":7}},"45":{"start":{"line":160,"column":4},"end":{"line":160,"column":40}},"46":{"start":{"line":164,"column":4},"end":{"line":164,"column":48}},"47":{"start":{"line":168,"column":19},"end":{"line":168,"column":68}},"48":{"start":{"line":169,"column":23},"end":{"line":169,"column":97}},"49":{"start":{"line":170,"column":17},"end":{"line":170,"column":38}},"50":{"start":{"line":171,"column":21},"end":{"line":171,"column":23}},"51":{"start":{"line":172,"column":4},"end":{"line":176,"column":5}},"52":{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},"53":{"start":{"line":174,"column":8},"end":{"line":174,"column":29}},"54":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"55":{"start":{"line":178,"column":6},"end":{"line":178,"column":15}},"56":{"start":{"line":180,"column":20},"end":{"line":180,"column":31}},"57":{"start":{"line":181,"column":4},"end":{"line":181,"column":55}},"58":{"start":{"line":181,"column":32},"end":{"line":181,"column":53}},"59":{"start":{"line":182,"column":4},"end":{"line":185,"column":7}},"60":{"start":{"line":186,"column":4},"end":{"line":186,"column":27}},"61":{"start":{"line":190,"column":18},"end":{"line":190,"column":46}},"62":{"start":{"line":191,"column":21},"end":{"line":201,"column":6}},"63":{"start":{"line":202,"column":16},"end":{"line":211,"column":5}},"64":{"start":{"line":212,"column":4},"end":{"line":218,"column":7}},"65":{"start":{"line":219,"column":4},"end":{"line":219,"column":68}},"66":{"start":{"line":223,"column":4},"end":{"line":223,"column":48}},"67":{"start":{"line":227,"column":4},"end":{"line":227,"column":56}},"68":{"start":{"line":231,"column":21},"end":{"line":231,"column":76}},"69":{"start":{"line":232,"column":19},"end":{"line":232,"column":42}},"70":{"start":{"line":233,"column":4},"end":{"line":233,"column":18}},"71":{"start":{"line":237,"column":16},"end":{"line":237,"column":52}},"72":{"start":{"line":238,"column":4},"end":{"line":238,"column":21}},"73":{"start":{"line":238,"column":14},"end":{"line":238,"column":21}},"74":{"start":{"line":239,"column":4},"end":{"line":249,"column":7}},"75":{"start":{"line":253,"column":19},"end":{"line":253,"column":68}},"76":{"start":{"line":254,"column":23},"end":{"line":254,"column":97}},"77":{"start":{"line":255,"column":17},"end":{"line":255,"column":46}},"78":{"start":{"line":256,"column":21},"end":{"line":256,"column":23}},"79":{"start":{"line":257,"column":4},"end":{"line":261,"column":5}},"80":{"start":{"line":258,"column":6},"end":{"line":260,"column":7}},"81":{"start":{"line":259,"column":8},"end":{"line":259,"column":29}},"82":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"83":{"start":{"line":263,"column":6},"end":{"line":263,"column":15}},"84":{"start":{"line":265,"column":20},"end":{"line":265,"column":31}},"85":{"start":{"line":266,"column":4},"end":{"line":266,"column":55}},"86":{"start":{"line":266,"column":32},"end":{"line":266,"column":53}},"87":{"start":{"line":267,"column":4},"end":{"line":270,"column":7}},"88":{"start":{"line":271,"column":4},"end":{"line":271,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":2},"end":{"line":10,"column":3}},"loc":{"start":{"line":10,"column":24},"end":{"line":13,"column":3}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":36},"end":{"line":31,"column":3}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":27},"end":{"line":34,"column":3}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":2},"end":{"line":36,"column":3}},"loc":{"start":{"line":36,"column":31},"end":{"line":38,"column":3}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":39,"column":2},"end":{"line":39,"column":3}},"loc":{"start":{"line":39,"column":38},"end":{"line":43,"column":3}},"line":39},"5":{"name":"(anonymous_5)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":29},"end":{"line":46,"column":3}},"line":44},"6":{"name":"(anonymous_6)","decl":{"start":{"line":47,"column":2},"end":{"line":47,"column":3}},"loc":{"start":{"line":47,"column":32},"end":{"line":49,"column":3}},"line":47},"7":{"name":"(anonymous_7)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":31},"end":{"line":52,"column":3}},"line":50},"8":{"name":"(anonymous_8)","decl":{"start":{"line":53,"column":2},"end":{"line":53,"column":3}},"loc":{"start":{"line":53,"column":39},"end":{"line":70,"column":3}},"line":53},"9":{"name":"(anonymous_9)","decl":{"start":{"line":67,"column":47},"end":{"line":67,"column":48}},"loc":{"start":{"line":67,"column":58},"end":{"line":67,"column":79}},"line":67},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":28},"end":{"line":77,"column":3}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":74,"column":8},"end":{"line":74,"column":9}},"loc":{"start":{"line":74,"column":19},"end":{"line":74,"column":73}},"line":74},"12":{"name":"(anonymous_12)","decl":{"start":{"line":79,"column":2},"end":{"line":79,"column":3}},"loc":{"start":{"line":79,"column":60},"end":{"line":109,"column":3}},"line":79},"13":{"name":"(anonymous_13)","decl":{"start":{"line":111,"column":2},"end":{"line":111,"column":3}},"loc":{"start":{"line":111,"column":38},"end":{"line":135,"column":3}},"line":111},"14":{"name":"(anonymous_14)","decl":{"start":{"line":137,"column":2},"end":{"line":137,"column":3}},"loc":{"start":{"line":137,"column":38},"end":{"line":141,"column":3}},"line":137},"15":{"name":"(anonymous_15)","decl":{"start":{"line":143,"column":2},"end":{"line":143,"column":3}},"loc":{"start":{"line":143,"column":42},"end":{"line":157,"column":3}},"line":143},"16":{"name":"(anonymous_16)","decl":{"start":{"line":159,"column":2},"end":{"line":159,"column":3}},"loc":{"start":{"line":159,"column":28},"end":{"line":161,"column":3}},"line":159},"17":{"name":"(anonymous_17)","decl":{"start":{"line":163,"column":2},"end":{"line":163,"column":3}},"loc":{"start":{"line":163,"column":21},"end":{"line":165,"column":3}},"line":163},"18":{"name":"(anonymous_18)","decl":{"start":{"line":167,"column":2},"end":{"line":167,"column":3}},"loc":{"start":{"line":167,"column":44},"end":{"line":187,"column":3}},"line":167},"19":{"name":"(anonymous_19)","decl":{"start":{"line":181,"column":21},"end":{"line":181,"column":22}},"loc":{"start":{"line":181,"column":32},"end":{"line":181,"column":53}},"line":181},"20":{"name":"(anonymous_20)","decl":{"start":{"line":189,"column":2},"end":{"line":189,"column":3}},"loc":{"start":{"line":189,"column":86},"end":{"line":220,"column":3}},"line":189},"21":{"name":"(anonymous_21)","decl":{"start":{"line":222,"column":2},"end":{"line":222,"column":3}},"loc":{"start":{"line":222,"column":36},"end":{"line":224,"column":3}},"line":222},"22":{"name":"(anonymous_22)","decl":{"start":{"line":226,"column":2},"end":{"line":226,"column":3}},"loc":{"start":{"line":226,"column":35},"end":{"line":228,"column":3}},"line":226},"23":{"name":"(anonymous_23)","decl":{"start":{"line":230,"column":2},"end":{"line":230,"column":3}},"loc":{"start":{"line":230,"column":52},"end":{"line":234,"column":3}},"line":230},"24":{"name":"(anonymous_24)","decl":{"start":{"line":236,"column":2},"end":{"line":236,"column":3}},"loc":{"start":{"line":236,"column":56},"end":{"line":250,"column":3}},"line":236},"25":{"name":"(anonymous_25)","decl":{"start":{"line":252,"column":2},"end":{"line":252,"column":3}},"loc":{"start":{"line":252,"column":58},"end":{"line":272,"column":3}},"line":252},"26":{"name":"(anonymous_26)","decl":{"start":{"line":266,"column":21},"end":{"line":266,"column":22}},"loc":{"start":{"line":266,"column":32},"end":{"line":266,"column":53}},"line":266}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":16},"end":{"line":22,"column":46}},"type":"binary-expr","locations":[{"start":{"line":22,"column":16},"end":{"line":22,"column":41}},{"start":{"line":22,"column":45},"end":{"line":22,"column":46}}],"line":22},"1":{"loc":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},{"start":{},"end":{}}],"line":24},"2":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{},"end":{}}],"line":55},"3":{"loc":{"start":{"line":55,"column":8},"end":{"line":55,"column":40}},"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":16}},{"start":{"line":55,"column":20},"end":{"line":55,"column":40}}],"line":55},"4":{"loc":{"start":{"line":58,"column":57},"end":{"line":58,"column":70}},"type":"binary-expr","locations":[{"start":{"line":58,"column":57},"end":{"line":58,"column":64}},{"start":{"line":58,"column":68},"end":{"line":58,"column":70}}],"line":58},"5":{"loc":{"start":{"line":60,"column":12},"end":{"line":60,"column":83}},"type":"cond-expr","locations":[{"start":{"line":60,"column":40},"end":{"line":60,"column":62}},{"start":{"line":60,"column":65},"end":{"line":60,"column":83}}],"line":60},"6":{"loc":{"start":{"line":61,"column":17},"end":{"line":61,"column":64}},"type":"binary-expr","locations":[{"start":{"line":61,"column":17},"end":{"line":61,"column":40}},{"start":{"line":61,"column":44},"end":{"line":61,"column":64}}],"line":61},"7":{"loc":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},{"start":{},"end":{}}],"line":66},"8":{"loc":{"start":{"line":145,"column":4},"end":{"line":145,"column":21}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":21}},{"start":{},"end":{}}],"line":145},"9":{"loc":{"start":{"line":167,"column":23},"end":{"line":167,"column":42}},"type":"default-arg","locations":[{"start":{"line":167,"column":40},"end":{"line":167,"column":42}}],"line":167},"10":{"loc":{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},"type":"if","locations":[{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},{"start":{},"end":{}}],"line":173},"11":{"loc":{"start":{"line":173,"column":10},"end":{"line":173,"column":95}},"type":"binary-expr","locations":[{"start":{"line":173,"column":10},"end":{"line":173,"column":36}},{"start":{"line":173,"column":41},"end":{"line":173,"column":67}},{"start":{"line":173,"column":71},"end":{"line":173,"column":94}}],"line":173},"12":{"loc":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},{"start":{},"end":{}}],"line":177},"13":{"loc":{"start":{"line":238,"column":4},"end":{"line":238,"column":21}},"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":21}},{"start":{},"end":{}}],"line":238},"14":{"loc":{"start":{"line":252,"column":37},"end":{"line":252,"column":56}},"type":"default-arg","locations":[{"start":{"line":252,"column":54},"end":{"line":252,"column":56}}],"line":252},"15":{"loc":{"start":{"line":258,"column":6},"end":{"line":260,"column":7}},"type":"if","locations":[{"start":{"line":258,"column":6},"end":{"line":260,"column":7}},{"start":{},"end":{}}],"line":258},"16":{"loc":{"start":{"line":258,"column":10},"end":{"line":258,"column":95}},"type":"binary-expr","locations":[{"start":{"line":258,"column":10},"end":{"line":258,"column":36}},{"start":{"line":258,"column":41},"end":{"line":258,"column":67}},{"start":{"line":258,"column":71},"end":{"line":258,"column":94}}],"line":258},"17":{"loc":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},{"start":{},"end":{}}],"line":262}},"s":{"0":35,"1":35,"2":35,"3":103,"4":103,"5":103,"6":1,"7":103,"8":2,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":5,"17":5,"18":1,"19":4,"20":4,"21":4,"22":4,"23":2,"24":15,"25":4,"26":1,"27":2,"28":11,"29":11,"30":11,"31":11,"32":11,"33":3,"34":3,"35":3,"36":3,"37":3,"38":1,"39":1,"40":1,"41":2,"42":2,"43":1,"44":1,"45":1,"46":8,"47":4,"48":4,"49":4,"50":4,"51":4,"52":7,"53":4,"54":4,"55":2,"56":2,"57":2,"58":4,"59":2,"60":2,"61":11,"62":11,"63":11,"64":11,"65":11,"66":2,"67":9,"68":1,"69":1,"70":1,"71":2,"72":2,"73":1,"74":1,"75":4,"76":4,"77":4,"78":4,"79":4,"80":6,"81":3,"82":4,"83":2,"84":2,"85":2,"86":3,"87":2,"88":2},"f":{"0":35,"1":103,"2":2,"3":1,"4":1,"5":1,"6":1,"7":1,"8":5,"9":15,"10":1,"11":2,"12":11,"13":3,"14":1,"15":2,"16":1,"17":8,"18":4,"19":4,"20":11,"21":2,"22":9,"23":1,"24":2,"25":4,"26":3},"b":{"0":[103,101],"1":[1,102],"2":[1,4],"3":[5,5],"4":[4,1],"5":[2,2],"6":[4,3],"7":[2,2],"8":[1,1],"9":[1],"10":[4,3],"11":[7,5,1],"12":[2,2],"13":[1,1],"14":[1],"15":[3,3],"16":[6,4,1],"17":[2,2]},"inputSourceMap":{"version":3,"sources":["C:/Users/mtama/node/vector-db/src/durable-objects/vector-manager.ts"],"sourcesContent":["import { Agent } from 'agents'\nimport { findSimilarOptionsSchema, cleanupJobsParamsSchema } from './schemas/vector-manager.schema'\n\ninterface SearchHistoryEntry {\n  timestamp: string\n  queryVector: number[]\n  resultCount: number\n  topScore: number\n}\n\ninterface VectorJob {\n  id: string\n  type: 'create' | 'delete'\n  status: 'pending' | 'processing' | 'completed' | 'failed'\n  createdAt: string\n  completedAt?: string\n  failedAt?: string\n  error?: string\n  // For create jobs\n  text?: string\n  model?: string\n  namespace?: string\n  metadata?: Record<string, any>\n  vectorId?: string\n  // For delete jobs\n  vectorIds?: string[]\n  deletedCount?: number\n}\n\ninterface FileProcessingJob {\n  id: string\n  status: 'pending' | 'processing' | 'completed' | 'failed'\n  createdAt: string\n  completedAt?: string\n  failedAt?: string\n  error?: string\n  // File info\n  fileName: string\n  fileType: string\n  fileSize: number\n  namespace?: string\n  metadata?: Record<string, any>\n  // Results\n  vectorIds?: string[]\n  extractedText?: string\n  description?: string\n}\n\ninterface VectorManagerState {\n  searchHistory: SearchHistoryEntry[]\n  vectorJobs: Record<string, VectorJob>\n  fileProcessingJobs: Record<string, FileProcessingJob>\n}\n\nexport class VectorManager extends Agent<Env, VectorManagerState> {\n  private vectorizeIndex: VectorizeIndex\n\n  initialState: VectorManagerState = {\n    searchHistory: [],\n    vectorJobs: {},\n    fileProcessingJobs: {}\n  }\n\n  constructor(ctx: DurableObjectState, env: Env) {\n    super(ctx, env)\n    this.vectorizeIndex = env.VECTORIZE_INDEX\n  }\n\n  // Agentの状態管理を使用した検索履歴の保存\n  async trackSearch(query: number[], results: VectorizeMatches) {\n    const searchHistory = [...this.state.searchHistory]\n    searchHistory.push({\n      timestamp: new Date().toISOString(),\n      queryVector: query.slice(0, 10), // 最初の10次元のみ保存\n      resultCount: results.matches.length,\n      topScore: results.matches[0]?.score || 0\n    })\n    \n    // 最新100件のみ保持\n    if (searchHistory.length > 100) {\n      searchHistory.shift()\n    }\n    \n    this.setState({\n      ...this.state,\n      searchHistory\n    })\n  }\n\n  async getSearchHistory(): Promise<SearchHistoryEntry[]> {\n    return this.state.searchHistory\n  }\n\n  // RPC methods\n  async insertVectors(vectors: VectorizeVector[]): Promise<void> {\n    await this.vectorizeIndex.insert(vectors)\n  }\n\n  async queryVectors(vector: number[], options?: VectorizeQueryOptions): Promise<VectorizeMatches> {\n    const results = await this.vectorizeIndex.query(vector, options)\n    \n    // 検索履歴を非同期で保存\n    this.ctx.waitUntil(this.trackSearch(vector, results))\n    \n    return results\n  }\n\n  async getVectorsByIds(ids: string[]): Promise<VectorizeVector[]> {\n    return await this.vectorizeIndex.getByIds(ids)\n  }\n\n  async deleteVectorsByIds(ids: string[]): Promise<{ count: number }> {\n    return await this.vectorizeIndex.deleteByIds(ids)\n  }\n\n  async upsertVectors(vectors: VectorizeVector[]): Promise<void> {\n    await this.vectorizeIndex.upsert(vectors)\n  }\n\n  async findSimilar(\n    vectorId: string,\n    options?: VectorizeQueryOptions & { excludeSelf?: boolean }\n  ): Promise<VectorizeMatches> {\n    const vectors = await this.vectorizeIndex.getByIds([vectorId])\n    if (!vectors || vectors.length === 0) {\n      throw new Error(`Vector ${vectorId} not found`)\n    }\n\n    // zodでオプションをパースしてデフォルト値を設定\n    const parsedOptions = findSimilarOptionsSchema.parse(options || {})\n    \n    const queryOptions: VectorizeQueryOptions = {\n      topK: parsedOptions.excludeSelf ? parsedOptions.topK + 1 : parsedOptions.topK,\n      namespace: parsedOptions.namespace || vectors[0].namespace,\n      returnMetadata: parsedOptions.returnMetadata,\n      filter: parsedOptions.filter\n    }\n\n    const results = await this.vectorizeIndex.query(vectors[0].values, queryOptions)\n\n    if (parsedOptions.excludeSelf) {\n      results.matches = results.matches\n        .filter((match: VectorizeMatch) => match.id !== vectorId)\n        .slice(0, parsedOptions.topK)\n    }\n\n    return results\n  }\n\n  async batchQuery(\n    queries: Array<{\n      vector: number[]\n      options?: VectorizeQueryOptions\n    }>\n  ): Promise<VectorizeMatches[]> {\n    return await Promise.all(\n      queries.map(query => \n        this.vectorizeIndex.query(query.vector, query.options)\n      )\n    )\n  }\n\n  // 非同期ベクトル作成（Workflow使用）\n  async createVectorAsync(\n    text: string,\n    model?: string,\n    namespace?: string,\n    metadata?: Record<string, any>\n  ): Promise<{ jobId: string; workflowId: string; status: string }> {\n    const jobId = `vec_create_${Date.now()}`\n    \n    // Workflowを作成\n    const workflow = await this.env.VECTOR_OPERATIONS_WORKFLOW.create({\n      id: jobId,\n      params: {\n        type: 'create',\n        text,\n        model,\n        namespace,\n        metadata\n      }\n    })\n    \n    // ジョブを作成\n    const job: VectorJob = {\n      id: jobId,\n      type: 'create',\n      status: 'pending',\n      createdAt: new Date().toISOString(),\n      text,\n      model,\n      namespace,\n      metadata\n    }\n    \n    this.setState({\n      ...this.state,\n      vectorJobs: {\n        ...this.state.vectorJobs,\n        [jobId]: job\n      }\n    })\n    \n    return { jobId, workflowId: workflow.id, status: 'processing' }\n  }\n\n  // 非同期ベクトル削除（Workflow使用）\n  async deleteVectorsAsync(\n    vectorIds: string[]\n  ): Promise<{ jobId: string; workflowId: string; status: string }> {\n    const jobId = `vec_delete_${Date.now()}`\n    \n    // Workflowを作成\n    const workflow = await this.env.VECTOR_OPERATIONS_WORKFLOW.create({\n      id: jobId,\n      params: {\n        type: 'delete',\n        vectorIds\n      }\n    })\n    \n    // ジョブを作成\n    const job: VectorJob = {\n      id: jobId,\n      type: 'delete',\n      status: 'pending',\n      createdAt: new Date().toISOString(),\n      vectorIds\n    }\n    \n    this.setState({\n      ...this.state,\n      vectorJobs: {\n        ...this.state.vectorJobs,\n        [jobId]: job\n      }\n    })\n    \n    return { jobId, workflowId: workflow.id, status: 'processing' }\n  }\n\n  // Workflowステータスの取得\n  async getWorkflowStatus(workflowId: string) {\n    const workflow = await this.env.VECTOR_OPERATIONS_WORKFLOW.get(workflowId)\n    const status = await workflow.status()\n    return status\n  }\n\n  // ジョブステータスの更新\n  private updateJobStatus(jobId: string, status: VectorJob['status'], updates?: Partial<VectorJob>): void {\n    const job = this.state.vectorJobs[jobId]\n    if (!job) return\n    \n    this.setState({\n      ...this.state,\n      vectorJobs: {\n        ...this.state.vectorJobs,\n        [jobId]: {\n          ...job,\n          status,\n          ...updates\n        }\n      }\n    })\n  }\n\n  // ジョブステータスの取得\n  async getJobStatus(jobId: string): Promise<VectorJob | undefined> {\n    return this.state.vectorJobs[jobId]\n  }\n\n  // すべてのジョブの取得\n  async getAllJobs(): Promise<VectorJob[]> {\n    return Object.values(this.state.vectorJobs)\n  }\n\n  // 古いジョブのクリーンアップ\n  async cleanupOldJobs(olderThanHours: number = 24): Promise<number> {\n    // パラメータをバリデーション\n    const params = cleanupJobsParamsSchema.parse({ olderThanHours })\n    const cutoffTime = new Date(Date.now() - params.olderThanHours * 60 * 60 * 1000).toISOString()\n    const jobs = this.state.vectorJobs\n    const toDelete: string[] = []\n    \n    for (const [jobId, job] of Object.entries(jobs)) {\n      if (job.createdAt < cutoffTime && (job.status === 'completed' || job.status === 'failed')) {\n        toDelete.push(jobId)\n      }\n    }\n    \n    if (toDelete.length === 0) {\n      return 0\n    }\n    \n    const newJobs = { ...jobs }\n    toDelete.forEach(jobId => delete newJobs[jobId])\n    \n    this.setState({\n      ...this.state,\n      vectorJobs: newJobs\n    })\n    \n    return toDelete.length\n  }\n\n  // ファイル処理の非同期実行（Workflow使用）\n  async processFileAsync(\n    fileData: string,\n    fileName: string,\n    fileType: string,\n    fileSize: number,\n    namespace?: string,\n    metadata?: Record<string, any>\n  ): Promise<{ jobId: string; workflowId: string; status: string }> {\n    const jobId = `file_process_${Date.now()}`\n    \n    // Workflowを作成\n    const workflow = await this.env.FILE_PROCESSING_WORKFLOW.create({\n      id: jobId,\n      params: {\n        fileData,\n        fileName,\n        fileType,\n        fileSize,\n        namespace,\n        metadata\n      }\n    })\n    \n    // ジョブを作成\n    const job: FileProcessingJob = {\n      id: jobId,\n      status: 'pending',\n      createdAt: new Date().toISOString(),\n      fileName,\n      fileType,\n      fileSize,\n      namespace,\n      metadata\n    }\n    \n    this.setState({\n      ...this.state,\n      fileProcessingJobs: {\n        ...this.state.fileProcessingJobs,\n        [jobId]: job\n      }\n    })\n    \n    return { jobId, workflowId: workflow.id, status: 'processing' }\n  }\n\n  // ファイル処理ジョブのステータス取得\n  async getFileProcessingJob(jobId: string): Promise<FileProcessingJob | undefined> {\n    return this.state.fileProcessingJobs[jobId]\n  }\n\n  // すべてのファイル処理ジョブの取得\n  async getAllFileProcessingJobs(): Promise<FileProcessingJob[]> {\n    return Object.values(this.state.fileProcessingJobs)\n  }\n\n  // ファイル処理ワークフローのステータス取得\n  async getFileProcessingWorkflowStatus(workflowId: string) {\n    const workflow = await this.env.FILE_PROCESSING_WORKFLOW.get(workflowId)\n    const status = await workflow.status()\n    return status\n  }\n\n  // ファイル処理ジョブのステータス更新\n  private updateFileProcessingJobStatus(\n    jobId: string, \n    status: FileProcessingJob['status'], \n    updates?: Partial<FileProcessingJob>\n  ): void {\n    const job = this.state.fileProcessingJobs[jobId]\n    if (!job) return\n    \n    this.setState({\n      ...this.state,\n      fileProcessingJobs: {\n        ...this.state.fileProcessingJobs,\n        [jobId]: {\n          ...job,\n          status,\n          ...updates\n        }\n      }\n    })\n  }\n\n  // 古いファイル処理ジョブのクリーンアップ\n  async cleanupOldFileProcessingJobs(olderThanHours: number = 24): Promise<number> {\n    // パラメータをバリデーション\n    const params = cleanupJobsParamsSchema.parse({ olderThanHours })\n    const cutoffTime = new Date(Date.now() - params.olderThanHours * 60 * 60 * 1000).toISOString()\n    const jobs = this.state.fileProcessingJobs\n    const toDelete: string[] = []\n    \n    for (const [jobId, job] of Object.entries(jobs)) {\n      if (job.createdAt < cutoffTime && (job.status === 'completed' || job.status === 'failed')) {\n        toDelete.push(jobId)\n      }\n    }\n    \n    if (toDelete.length === 0) {\n      return 0\n    }\n    \n    const newJobs = { ...jobs }\n    toDelete.forEach(jobId => delete newJobs[jobId])\n    \n    this.setState({\n      ...this.state,\n      fileProcessingJobs: newJobs\n    })\n    \n    return toDelete.length\n  }\n}"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7c59abbd5c33ec4bca6bf3f0b9c56efa6c6b98dc"}}